.physical_buffer
%0 : <f32 [1,1,8,8] 256 bytes of [1,1,8,8]> @input[0, 256]
%1 : <bf16 [1,1,8,8] 128 bytes of [1,1,8,8]> @data[0, 128]
%2 : <f32 [19,1,3,3] 684 bytes of [19,1,3,3]> @rdata[0, 688]
%3 : <bf16 [19,1,3,3] 342 bytes of [19,1,3,3]> @data[128, 472]
%4 : <f32 [1,19,8,8] 4864 bytes of [1,19,8,8]> @data[472, 5336]
%5 : <bf16 [1,1,19,5] 190 bytes of [1,1,19,5]> @rdata[688, 880]
%6 : <bf16 [1,1,19,5] 190 bytes of [1,1,19,5]> @data[5336, 5528]
%7 : <bf16 [1,19,8,8] 2432 bytes of [1,19,8,8]> @data[5528, 7960]
%8 : <f32 [1,19,8,8] 4864 bytes of [1,19,8,8]> @output[0, 4864]

.compute_sequence
fn main(%0) : (<f32 [1,1,8,8] 256 bytes of [1,1,8,8]>) -> (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
{
    %0 = Input() : () -> (<f32 [1,1,8,8] 256 bytes of [1,1,8,8]>)
    %1 = GNNELoad(%0) : (<f32 [1,1,8,8] 256 bytes of [1,1,8,8]>) -> (<bf16 [1,1,8,8] 128 bytes of [1,1,8,8]>)
    %2[0, 684] = Constant() : () -> (<f32 [19,1,3,3] 684 bytes of [19,1,3,3]>)
    %3[0, 342] = GNNELoad(%2[0, 684]) : (<f32 [19,1,3,3] 684 bytes of [19,1,3,3]>) -> (<bf16 [19,1,3,3] 342 bytes of [19,1,3,3]>)
    %4 = Uninitialized() : () -> (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
    %5[0, 190] = Constant() : () -> (<bf16 [1,1,19,5] 190 bytes of [1,1,19,5]>)
    %6[0, 190] = GNNELoad(%5[0, 190]) : (<bf16 [1,1,19,5] 190 bytes of [1,1,19,5]>) -> (<bf16 [1,1,19,5] 190 bytes of [1,1,19,5]>)
    %7 = GNNEConv2D(%1, %3[0, 342], %4, %6[0, 190]) : (<bf16 [1,1,8,8] 128 bytes of [1,1,8,8]>, <bf16 [19,1,3,3] 342 bytes of [19,1,3,3]>, <f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>, <bf16 [1,1,19,5] 190 bytes of [1,1,19,5]>) -> (<bf16 [1,19,8,8] 2432 bytes of [1,19,8,8]>)
    %8 = GNNEStore(%7) : (<bf16 [1,19,8,8] 2432 bytes of [1,19,8,8]>) -> (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
    return %8 : (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
}
