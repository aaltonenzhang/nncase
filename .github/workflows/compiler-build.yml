name: compiler-build

on: [push, pull_request]

env:
  BUILD_TYPE: Release
  NNCASE_VERSION_SUFFIX: .dev${{github.run_number}}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-18.04,windows-2019,macos-10.15]
        os: [ubuntu-18.04,macos-10.15]

    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install System Requirements
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt update
        sudo apt install libgtk2.0-dev -y

    - name: Install System Requirements
      if: runner.os == 'Macos'
      shell: bash
      run: |
        brew install sunnycase/core/libomp@11.1.0

    - name: Add msbuild to PATH
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1.9.0
          
    - name: Setup Python
      if: runner.os != 'Macos'
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Setup Python
      if: runner.os == 'Macos'
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.9

    - name: Install Conan
      shell: bash
      run: |
        pip install conan

    - name: Configure Conan
      if: runner.os == 'Linux'
      shell: bash
      run: |
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      env:
        CC: gcc-10
        CXX: g++-10
      if: runner.os == 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DPython3_ROOT_DIR=${pythonLocation}

    - name: Configure CMake
      if: runner.os != 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DPython3_ROOT_DIR=${pythonLocation}

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config $BUILD_TYPE

    - name: Install
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --install . --prefix ../install

    - name: CTest
      shell: bash
      working-directory: ${{github.workspace}}/build/tests/kernels
      run: ctest -C $BUILD_TYPE
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: nncase-${{matrix.os}}-x86_64
        path: ${{github.workspace}}/install
        if-no-files-found: error

  test-compiler:
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-18.04,windows-2019,macos-10.15]
        os: [ubuntu-18.04,macos-10.15]

    steps:
    - uses: actions/checkout@v2

    - name: Install System Requirements
      if: runner.os == 'Macos'
      shell: bash
      run: |
        brew install sunnycase/core/libomp@11.1.0

    - name: Setup Python
      if: runner.os != 'Macos'
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Setup Python
      if: runner.os == 'Macos'
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.9

    - name: Install System Requirements
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt update
        sudo apt install libgtk2.0-dev -y
        sudo apt-get install libegl1-mesa-dev -y
        sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler -y
        sudo apt-get install --no-install-recommends libboost-all-dev -y
        sudo apt-get install libopenblas-dev liblapack-dev libatlas-base-dev -y
        sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev -y
        sudo apt-get install patchelf -y
        sudo apt-get install libboost1.62-dev libboost1.62-tools-dev libboost-mpi-python1.62.0 libboost1.62-all-dev -y
        sudo ln -s /usr/lib/x86_64-linux-gnu/libgflags.so.2.2.1 /usr/lib/x86_64-linux-gnu/libgflags.so.2

    - name: Install System Requirements
      if: runner.os == 'Macos'
      shell: bash
      run: |
        brew install -vd snappy leveldb gflags glog szip lmdb
        brew install hdf5 openblas
        brew install autoconf automake libtool
        wget -c https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.17.3.zip
        unzip v3.17.3.zip
        cd protobuf-3.17.3
        ./autogen.sh
        ./configure
        make
        make install
        cd python
        python setup.py build
        python setup.py test
        python setup.py install
        cd ../../
        brew install -vd boost boost-python3

    - name: Install Python Packages
      if: runner.os != 'Macos'
      shell: bash
      run: |
        pip install conan tensorflow==2.5.0 matplotlib pillow onnx==1.9.0 onnx-simplifier==0.3.6 onnxoptimizer==0.2.6 onnxruntime==1.8.0 numpy==1.19.2 scikit-image==0.17.2
        pip install torch==1.9.0+cpu torchvision==0.10.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
        pip install pytest

    # caffe test must use numpy==1.17.5, but tflite test must use numpy==1.19.2, and tensorflow==2.5.0 is conflict with numpy==1.17.5
    - name: Install Python Packages
      if: runner.os == 'Macos'
      shell: bash
      run: |
        pip install conan numpy==1.17.5 scikit-image protobuf
        pip install pytest

    - name: Create Test Environment
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        pip install pytest
        mkdir test_results

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: nncase-${{matrix.os}}-x86_64
        path: ${{github.workspace}}/install

    - name: Download a Build Artifact
      if: runner.os == 'Linux'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: cmake.yml
        branch: nncase
        name: warpctc-caffe-linux
        path: ${{github.workspace}}
        repo: kendryte/caffe

    - name: Download a Build Artifact
      if: runner.os == 'Macos'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: cmake.yml
        branch: nncase
        name: warpctc-caffe-macos
        path: ${{github.workspace}}
        repo: kendryte/caffe

    - name: Install Caffe
      working-directory: ${{github.workspace}}
      if: runner.os == 'Linux'
      shell: bash
      run: |
        cd ${{github.workspace}}
        pip install --target ${{github.workspace}}/install/python/warpctc-caffe warpctc_caffe-1.0.0-cp37-cp37m-linux_x86_64.whl

    - name: Install Caffe
      working-directory: ${{github.workspace}}
      if: runner.os == 'Macos'
      shell: bash
      run: |
        cd ${{github.workspace}}
        pip install --target ${{github.workspace}}/install/python/warpctc-caffe warpctc_caffe-1.0.0-cp39-cp39-macosx_10_15_x86_64.whl

    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os == 'Linux'
      shell: bash
      env:
        PYTHONPATH: ${{github.workspace}}/install/lib:${{github.workspace}}/install/python:${{github.workspace}}/install/python/warpctc-caffe/caffe:${{github.workspace}}/tests
        LD_LIBRARY_PATH: ${{github.workspace}}/install/python/warpctc-caffe:/usr/lib/x86_64-linux-gnu:/usr/local/lib
      run: |
        patchelf --replace-needed libpython3.5m.so.1.0 libpython3.6m.so.1.0 ${{github.workspace}}/install/python/warpctc-caffe/caffe/caffe/_caffe.so
        patchelf --replace-needed libboost_python-py35.so.1.62.0 libboost_python-py36.so.1.62.0 ${{github.workspace}}/install/python/warpctc-caffe/caffe/caffe/_caffe.so
        patchelf --replace-needed libpython3.5m.so.1.0 libpython3.6m.so.1.0 ${{github.workspace}}/install/python/warpctc-caffe/_caffe.so
        patchelf --replace-needed libboost_python-py35.so.1.62.0 libboost_python-py36.so.1.62.0 ${{github.workspace}}/install/python/warpctc-caffe/_caffe.so
        patchelf --replace-needed libpython3.5m.so.1.0 libpython3.6m.so.1.0 ${{github.workspace}}/install/python/warpctc-caffe/libcaffe.so.1.0.0
        patchelf --replace-needed libboost_python-py35.so.1.62.0 libboost_python-py36.so.1.62.0 ${{github.workspace}}/install/python/warpctc-caffe/libcaffe.so.1.0.0
        pytest tests/importer/caffe --doctest-modules --junitxml=test_results/importer_caffe.xml
        pytest tests/importer/tflite --doctest-modules --junitxml=test_results/importer_tflite.xml
        pytest tests/importer/onnx --doctest-modules --junitxml=test_results/importer_onnx.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/schedule.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/graph_partition.xml

    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os == 'Macos'
      shell: bash
      env:
        PYTHONPATH: ${{github.workspace}}/install/lib:${{github.workspace}}/install/python:${{github.workspace}}/install/python/warpctc-caffe/caffe:${{github.workspace}}/tests
        DYLD_LIBRARY_PATH: ${{github.workspace}}/protobuf-3.17.3/src/.libs:${{github.workspace}}/install/python/warpctc-caffe:/usr/local/lib:/Users/runner/hostedtoolcache/Python/3.9.6/x64/lib
      run: |
        echo "test0"
        ls ${{github.workspace}}
        echo "test1"
        otool -L ${{github.workspace}}/install/python/warpctc-caffe/caffe/caffe/_caffe.so
        echo "test hosted python path"
        ls /Users/runner/hostedtoolcache/Python/3.9.6/x64
        echo "test hosted python lib path"
        ls /Users/runner/hostedtoolcache/Python/3.9.6/x64/lib
        echo "test2"
        ls ${{github.workspace}}/protobuf-3.17.3/src/.libs
        install_name_tool -change "/usr/local/opt/protobuf/lib/libprotobuf.28.dylib" "${{github.workspace}}/protobuf-3.17.3/src/.libs/libprotobuf.28.dylib" ${{github.workspace}}/install/python/warpctc-caffe/_caffe.dylib
        install_name_tool -change "/usr/local/opt/protobuf/lib/libprotobuf.28.dylib" "${{github.workspace}}/protobuf-3.17.3/src/.libs/libprotobuf.28.dylib" ${{github.workspace}}/install/python/warpctc-caffe/libcaffe.1.0.0.dylib
        install_name_tool -change "/usr/local/opt/protobuf/lib/libprotobuf.28.dylib" "${{github.workspace}}/protobuf-3.17.3/src/.libs/libprotobuf.28.dylib" ${{github.workspace}}/install/python/warpctc-caffe/caffe/caffe/_caffe.so
        install_name_tool -change "/usr/local/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/Python" "/Users/runner/hostedtoolcache/Python/3.9.6/x64/lib/libpython3.9.dylib" ${{github.workspace}}/install/python/warpctc-caffe/_caffe.dylib
        install_name_tool -change "/usr/local/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/Python" "/Users/runner/hostedtoolcache/Python/3.9.6/x64/lib/libpython3.9.dylib" ${{github.workspace}}/install/python/warpctc-caffe/libcaffe.1.0.0.dylib
        install_name_tool -change "/usr/local/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/Python" "/Users/runner/hostedtoolcache/Python/3.9.6/x64/lib/libpython3.9.dylib" ${{github.workspace}}/install/python/warpctc-caffe/caffe/caffe/_caffe.so
        echo "test3"
        otool -L ${{github.workspace}}/install/python/warpctc-caffe/caffe/caffe/_caffe.so
        echo "test4"
        brew info boost
        echo "test5"
        otool -L /usr/local/opt/boost/lib/libboost_system-mt.dylib
        echo "test6"
        brew info boost-python3
        echo "test7"
        otool -L /usr/local/opt/boost-python3/lib/libboost_python39-mt.dylib
        echo "test build python path"
        ls /usr/local/Frameworks/Python.framework/Versions/3.9
        echo "test build python lib path"
        ls /usr/local/Frameworks/Python.framework/Versions/3.9/lib
        echo "test otool python path"
        ls /usr/local/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/bin
        echo "test otool python path2"
        ls /usr/local/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/lib
        echo "test otool python path3"
        ls /usr/local/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/include
        echo "python ver"
        which python
        cp ${{github.workspace}}/install/python/warpctc-caffe/libcaffe.1.0.0.dylib /usr/local/lib
        pytest tests/importer/caffe --doctest-modules --junitxml=test_results/importer_caffe.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/schedule.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/graph_partition.xml

    - name: Install Python Packages
      if: runner.os == 'Macos'
      shell: bash
      run: |
        pip install conan tensorflow==2.5.0 matplotlib pillow onnx==1.9.0 onnx-simplifier==0.3.6 onnxoptimizer==0.2.6 onnxruntime==1.9.2 numpy==1.19.2
        pip install torch==1.9.0 torchvision==0.10.0 -f https://download.pytorch.org/whl/torch_stable.html
        pip install pytest

    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os == 'Macos'
      shell: bash
      env:
        PYTHONPATH: ${{github.workspace}}/install/lib:${{github.workspace}}/install/python:${{github.workspace}}/tests
      run: |
        pytest tests/importer/tflite --doctest-modules --junitxml=test_results/importer_tflite.xml
        pytest tests/importer/onnx --doctest-modules --junitxml=test_results/importer_onnx.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/schedule.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/graph_partition.xml

    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os == 'Windows'
      shell: bash
      env:
        PATH: ${{github.workspace}}/install/bin
        PYTHONPATH: ${{github.workspace}}/install/lib;${{github.workspace}}/install/python;${{github.workspace}}/tests
      run: |
        pytest tests/importer/tflite --doctest-modules --junitxml=test_results/importer_tflite.xml
        pytest tests/importer/onnx --doctest-modules --junitxml=test_results/importer_onnx.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/schedule.xml
        pytest tests/schedule --doctest-modules --junitxml=test_results/graph_partition.xml

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always() && runner.os == 'Linux'
      with:
        files: test_results/*.xml
