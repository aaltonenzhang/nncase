.physical_buffer
%0 : <f32 [1,1,8,8] 256 bytes of [1,1,8,8]> @input[0, 256]
%1 : <f32 [19,1,3,3] 684 bytes of [19,1,3,3]> @rdata[0, 688]
%2 : <f32 [19] 76 bytes of [19]> @rdata[688, 768]
%3 : <f32 [1,19,8,8] 4864 bytes of [1,19,8,8]> @output[0, 4864]

.compute_sequence
fn main(%0) : (<f32 [1,1,8,8] 256 bytes of [1,1,8,8]>) -> (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
{
    %0 = Input() : () -> (<f32 [1,1,8,8] 256 bytes of [1,1,8,8]>)
    %1[0, 684] = Constant() : () -> (<f32 [19,1,3,3] 684 bytes of [19,1,3,3]>)
    %2[0, 76] = Constant() : () -> (<f32 [19] 76 bytes of [19]>)
    %3 = FakeKPUConv2D(%0, %1[0, 684], %2[0, 76]) : (<f32 [1,1,8,8] 256 bytes of [1,1,8,8]>, <f32 [19,1,3,3] 684 bytes of [19,1,3,3]>, <f32 [19] 76 bytes of [19]>) -> (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
    return %3 : (<f32 [1,19,8,8] 4864 bytes of [1,19,8,8]>)
}
